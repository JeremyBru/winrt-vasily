<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Vasily.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Vasily"
    xmlns:common="using:Vasily.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ThirdParty="using:Vasily.ThirdParty"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">One Ping Only</x:String>
        <common:BooleanToVisibilityConverter x:Name="VisibilityConverter" />

        <CollectionViewSource x:Name="favoritesViewSource" Source="{Binding Favorites}"/>
        
        <DataTemplate x:Key="FavoritesListViewItemTemplate">
            <Grid Margin="0,20,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Margin="10,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ItemTextStyle}" Margin="0,0,10,0">Host:</TextBlock>
                        <TextBlock Text="{Binding HostName}" Style="{StaticResource ItemTextStyle}" MaxHeight="40"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource CaptionTextStyle}" Margin="0,0,10,0">Port:</TextBlock>
                        <TextBlock Text="{Binding PortNumber}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <Grid Grid.Row="1" x:Name="mainConnectGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" x:Name="colFirst" />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="1" Text="Host name:"  Margin="5,5,5,5" Style="{StaticResource ItemTextStyle}"/>
            <ThirdParty:ExtendedTextBox x:Name="HostNameTextBox" Grid.Row="1" Grid.Column="1"
                                                CustomAction="{Binding UpdateBoundHostNameProperty, Mode=OneTime}"
                                                Text="{Binding HostName, Mode=TwoWay}" 
                                                Width="250"
                                                Margin="5,5,5,5" GotFocus="HostNameTextBox_GotFocus">
            </ThirdParty:ExtendedTextBox>

            <TextBlock Grid.Row="0" Grid.Column="2" Text="Port:"  Margin="5,5,5,5" Style="{StaticResource ItemTextStyle}"/>
            <ThirdParty:ExtendedTextBox x:Name="PortTextBox" Grid.Row="1" Grid.Column="2" 
                                                CustomAction="{Binding UpdateBoundPortNumberProperty, Mode=OneTime}"
                                                Text="{Binding PortNumber, Mode=TwoWay}" 
                                                Width="80"
                                                Margin="5,5,5,5">
            </ThirdParty:ExtendedTextBox>

            <Button Grid.Row="1" Grid.Column="3" Content="Connect" Margin="5,5,5,5" Command="{Binding ConnectCommand, Mode=OneWay}" />

            <ProgressRing Grid.Row="1" Grid.Column="4" HorizontalAlignment="Left" IsActive="{Binding ConnectionInProgress}" 
                                  Visibility="{Binding ConnectionInProgress,Converter={StaticResource VisibilityConverter}}" />

            <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding ConnectionAttemptInformation}" Style="{StaticResource ItemTextStyle}" Margin="5,5,5,5"/>

            <StackPanel Orientation="Vertical" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3">
              <TextBlock Text="Favorites" 
                         Style="{StaticResource ItemTextStyle}" FontSize="24"
                         Margin="5,5,5,5"/>
                
              <ListView
                x:Name="favoritesListView"
                AutomationProperties.AutomationId="FavoritesListView"
                AutomationProperties.Name="Items"
                Margin="0,10,0,0"
                Padding="10,0,0,60"
                ItemsSource="{Binding Source={StaticResource favoritesViewSource}}"
                ItemTemplate="{StaticResource FavoritesListViewItemTemplate}"
                SelectionMode="Single"
                SelectedItem="{Binding SelectedFavorite, Mode=TwoWay}"
                IsSynchronizedWithCurrentItem="False"
                IsItemClickEnabled="False"
                IsSwipeEnabled="false"/>
            </StackPanel>
        </Grid>

        <TextBlock Grid.Row="1" 
                   Style="{StaticResource ItemTextStyle}" 
                   Margin="5,5,5,5"
                   x:Name="snappedStandIn" 
                   Visibility="Collapsed" 
                   Text="This app does not support snapped view" />
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="colFirst" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <GridLength>0</GridLength>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedStandIn" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainConnectGrid" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

    <Page.BottomAppBar>
        <AppBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="LeftPanel" Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                    <Button AutomationProperties.Name="Delete"  x:Name="DeleteButton" Style="{StaticResource RemoveAppBarButtonStyle}" 
                            Visibility="{Binding IsFavoriteSelected, Converter={StaticResource VisibilityConverter}}"
                            Tag="Delete" Command="{Binding DeleteSelectedItemCommand, Mode=OneWay}" />
                </StackPanel>
                <StackPanel x:Name="RightPanel" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Button AutomationProperties.Name="Add" x:Name="AddButton" Style="{StaticResource AddAppBarButtonStyle}"
                            Visibility="{Binding CanConnect, Converter={StaticResource VisibilityConverter}}"
                            Tag="Add" Command="{Binding AddItemCommand, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    
</common:LayoutAwarePage>
